<Page
    x:Name="pageRoot"
    x:Class="InputsExample.InputsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:InputsExample"
    xmlns:common="using:InputsExample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40"/>
        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="116,0,116,46" Background="Transparent" Tapped="HandleBackgroundTapped">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Width="320" Margin="0,0,80,0"  DataContext="{Binding InputSettings}" d:DataContext="{d:DesignInstance Type=local:InputSettings, IsDesignTimeCreatable=true}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}"/>
                </Grid.Resources>
                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="9" Text="Pointers:"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Integrated Devices Only:"/>
                <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding PointerIntegratedDevicesOnly, Mode=TwoWay}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Mouse:"/>
                <CheckBox Grid.Row="2" Grid.Column="1" IsEnabled="{Binding IsMouseAvailable}" IsChecked="{Binding PointerSupportMouse, Mode=TwoWay}"/>
                <Button Grid.Row="2" Grid.Column="2" IsEnabled="{Binding IsMouseAvailable}" Content="Details" HorizontalAlignment="Stretch" Click="HandleMouseDetailsClick"/>
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Touch:"/>
                <CheckBox Grid.Row="3" Grid.Column="1" IsEnabled="{Binding IsTouchAvailable}" IsChecked="{Binding PointerSupportTouch, Mode=TwoWay}"/>
                <Button Grid.Row="3" Grid.Column="2" IsEnabled="{Binding IsTouchAvailable}" Content="Details" HorizontalAlignment="Stretch" Click="HandleTouchDetailsClick"/>
                <TextBlock Grid.Row="4" Grid.Column="0" Text="Pen:"/>
                <CheckBox Grid.Row="4" Grid.Column="1" IsEnabled="{Binding IsPenAvailable}" IsChecked="{Binding PointerSupportPen, Mode=TwoWay}"/>

                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="9" Text="Manipulations:"/>
                <TextBlock Grid.Row="6" Grid.Column="0" Text="Translate:"/>
                <CheckBox Grid.Row="6" Grid.Column="1" IsChecked="{Binding ManipulationTransform, Mode=TwoWay}"/>
                <CheckBox Grid.Row="6" Grid.Column="2" Content="Use Inertia" IsEnabled="{Binding ManipulationTransform}" IsChecked="{Binding ManipulationTransformInertia, Mode=TwoWay}"/>
                <TextBlock Grid.Row="7" Grid.Column="0" Text="Rotate:"/>
                <CheckBox Grid.Row="7" Grid.Column="1" IsChecked="{Binding ManipulationRotation, Mode=TwoWay}"/>
                <CheckBox Grid.Row="7" Grid.Column="2" Content="Use Inertia" IsEnabled="{Binding ManipulationRotation}" IsChecked="{Binding ManipulationRotationInertia, Mode=TwoWay}"/>
                <TextBlock Grid.Row="8" Grid.Column="0" Text="Scale"/>
                <CheckBox Grid.Row="8" Grid.Column="1" IsChecked="{Binding ManipulationScaling, Mode=TwoWay}"/>
                <CheckBox Grid.Row="8" Grid.Column="2" Content="Use Inertia" IsEnabled="{Binding ManipulationScaling}" IsChecked="{Binding ManipulationScalingInertia, Mode=TwoWay}"/>

                <TextBlock Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="9" Text="Gestures:"/>
                <TextBlock Grid.Row="10" Grid.Column="0" Text="Tap Enabled:"/>
                <CheckBox Grid.Row="10" Grid.Column="1" IsChecked="{Binding TapEnabled, Mode=TwoWay}"/>
                <TextBlock Grid.Row="11" Grid.Column="0" Text="Right-Tap Enabled:"/>
                <CheckBox Grid.Row="11" Grid.Column="1" IsChecked="{Binding RightTapEnabled, Mode=TwoWay}"/>
                <TextBlock Grid.Row="12" Grid.Column="0" Text="Double-Tap Enabled:"/>
                <CheckBox Grid.Row="12" Grid.Column="1" IsChecked="{Binding DoubleTapEnabled, Mode=TwoWay}"/>
                <TextBlock Grid.Row="13" Grid.Column="0" Text="Hold Enabled:"/>
                <CheckBox Grid.Row="13" Grid.Column="1" IsChecked="{Binding HoldingEnabled, Mode=TwoWay}"/>

                <TextBlock Grid.Row="14" Grid.Column="0" Text="Keyboard:"/>
                <Button Grid.Row="14" Grid.Column="2" IsEnabled="{Binding IsKeyboardAvailable}" Content="Details" HorizontalAlignment="Stretch" Click="HandleKeyboardDetailsClick"/>

                <StackPanel Grid.Row="99" Grid.Column="0" Grid.ColumnSpan="9">
                    <Button Content="Add Ball (B)" HorizontalAlignment="Stretch" Click="HandleAddBallClick"/>
                    <Button Content="Add Square (S)" HorizontalAlignment="Stretch" Click="HandleAddSquareClick"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <ItemsControl x:Name="ShapePanel" ItemsSource="{Binding Shapes}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplateSelector>
                        <local:ShapeTemplateSelector>
                            <local:ShapeTemplateSelector.SquareTemplate>
                                <DataTemplate>
                                    <local:SquareControl/>
                                </DataTemplate>
                            </local:ShapeTemplateSelector.SquareTemplate>
                            <local:ShapeTemplateSelector.EllipseTemplate>
                                <DataTemplate>
                                    <local:BallControl/>
                                </DataTemplate>
                            </local:ShapeTemplateSelector.EllipseTemplate>
                        </local:ShapeTemplateSelector>
                    </ItemsControl.ItemTemplateSelector>
                </ItemsControl>
            </Grid>
        </Grid>
    </Grid>
</Page>
