<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="EncryptionExample.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EncryptionExample"
    xmlns:common="using:EncryptionExample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:data="using:EncryptionExample.Data"
    mc:Ignorable="d" Margin="0,1,0,-1">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Encryption Example</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <Grid Grid.Row="1" Margin="120 0 0 0">
            <Grid.DataContext>
                <data:ViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Filters: " Style="{StaticResource ItemTextStyle}" FontWeight="Bold"/>
                <CheckBox IsChecked="{Binding Asymmetric, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Asymmetric Only" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Symmetric, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Symmetric Only" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Block, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Block" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Stream, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Stream" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Authenticated, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Authenticated" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Pkcs7, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="PKCS#7" Style="{StaticResource ItemTextStyle}"/>                
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <CheckBox IsChecked="{Binding Verification, Mode=TwoWay}" Margin="56 0 0 0"/>
                <TextBlock Text="Verification" Style="{StaticResource ItemTextStyle}"/>
                <CheckBox IsChecked="{Binding Hash, Mode=TwoWay}" Margin="10 0 0 0"/>
                <TextBlock Text="Hash" Style="{StaticResource ItemTextStyle}"/>                
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="2">
                <TextBlock Text="Select the Algorithm:" Style="{StaticResource ItemTextStyle}" FontWeight="Bold"/>
                <ComboBox ItemsSource="{Binding Algorithms}" SelectedItem="{Binding SelectedAlgorithm, Mode=TwoWay}" DisplayMemberPath="Name"/>
            </StackPanel>            
            <TextBlock Text="Text to Encrypt or Decrypted Text:" Style="{StaticResource ItemTextStyle}" FontWeight="Bold" Grid.Row="3"/>
            <TextBox Text="{Binding EncryptionInput, Mode=TwoWay}" TextWrapping="Wrap" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10 30 10 10"/>   
            <StackPanel Grid.Row="4" Orientation="Horizontal">
                <StackPanel Orientation="Vertical" Visibility="{Binding RequiresPassword, Converter={StaticResource BoolVisConverter}}">
                    <TextBlock Text="Password:" Style="{StaticResource ItemTextStyle}" FontWeight="Bold" Grid.Row="2"/>
                    <PasswordBox Width="200" Password="{Binding KeyInput, Mode=TwoWay}" HorizontalAlignment="Left" Margin="0 10 0 0"/>
                </StackPanel>
                <Button Content="Encrypt" IsEnabled="{Binding SelectedAlgorithm.IsEncryptionAlgorithm}" Command="{Binding}" VerticalAlignment="Top" Margin="10 0 0 0" CommandParameter="encrypt"/>
                <Button Content="Decrypt" IsEnabled="{Binding SelectedAlgorithm.IsEncryptionAlgorithm}" Command="{Binding}" VerticalAlignment="Top" Margin="10 0 0 0" CommandParameter="decrypt"/>
                <Button Content="Sign" IsEnabled="{Binding SelectedAlgorithm.IsVerificationAlgorithm}" Command="{Binding}" VerticalAlignment="Top" Margin="10 0 0 0" CommandParameter="sign"/>
                <Button Content="Verify" IsEnabled="{Binding SelectedAlgorithm.IsVerificationAlgorithm}" Command="{Binding}" VerticalAlignment="Top" Margin="10 0 0 0" CommandParameter="verify"/>
            </StackPanel>
            <TextBlock Text="Text to Decrypt or Encrypted Text:" Style="{StaticResource ItemTextStyle}" FontWeight="Bold" Grid.Row="5"/>
            <TextBox Text="{Binding DecryptionInput, Mode=TwoWay}" TextWrapping="Wrap" Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10 30 10 10"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
