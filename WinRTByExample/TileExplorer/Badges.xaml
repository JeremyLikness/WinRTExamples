<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="TileExplorer.Badges"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TileExplorer"
    xmlns:common="using:TileExplorer.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dataModel="using:TileExplorer.DataModel"
    mc:Ignorable="d">

    <Page.Resources>
        
        
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>            
        </Grid>

        <ScrollViewer Grid.Row="1" x:Name="BadgeScroller">
            <StackPanel Orientation="Vertical">
                <ToggleSwitch x:Name="GlyphOrNumeric" OffContent="Glyph" OnContent="Numeric" Margin="5"></ToggleSwitch>
                <StackPanel Margin="5" Orientation="Horizontal">
                    <Slider x:Name="NumericSlider" Minimum="1" Maximum="99" Width="200" HorizontalAlignment="Left"/>
                    <TextBlock Text="{Binding ElementName=NumericSlider, Path=Value}" Style="{StaticResource GroupHeaderTextStyle}" Margin="20 0 0 0"></TextBlock>
                </StackPanel>
                <ListView x:Name="Glyphs"
                         ItemTemplate="{StaticResource Badge250x125ItemTemplate}"
                         ItemsSource="{Binding Items}"
                         d:ItemsSource="{Binding Badges, Source={d:DesignInstance Type=dataModel:DataSource, IsDesignTimeCreatable=True}}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid FlowDirection="LeftToRight" MaximumRowsOrColumns="11" Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>                
                </ListView>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="SetBadge" Click="SetBadge_OnClick" Content="Set Badge"/><Button x:Name="ClearBadge" Click="ClearBadge_OnClick" Content="Clear Badge"/>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        
        <TextBlock 
            x:Name="SnapText"
            Visibility="Collapsed"
            Text="This page cannot be accessed in snapped mode. Please unsnap the app to continue."
                   TextWrapping="Wrap" Grid.Row="1"></TextBlock>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SnapText" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BadgeScroller" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
